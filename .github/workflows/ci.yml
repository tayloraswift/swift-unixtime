name: build

on:
    push:
        branches: [ master ]
    pull_request:
        branches: [ master ]

jobs:
    server:
        runs-on: ubuntu-24.04
        name: Amazon Linux 2023

        strategy:
            matrix:
                image:
                -   tayloraswift/5.10.0-amazonlinux2023:latest
        steps:
            -   name: Checkout repository
                uses: actions/checkout@v3

            -   name: Run pipeline
                run: |
                    docker run -t --rm \
                        --name swift-environment \
                        --user root \
                        -v $PWD:/swift-hash \
                        -w /swift-hash \
                        ${{ matrix.image }} \
                        .github/pipeline

    linux:
        runs-on: ubuntu-24.04
        name: Ubuntu 24.04

        steps:
            -   name: Install Swift
                uses: tayloraswift/swift-install-action@master
                with:
                    swift-prefix: "swift-5.10.1-release/ubuntu2404/swift-5.10.1-RELEASE"
                    swift-id: "swift-5.10.1-RELEASE-ubuntu24.04"

            -   name: Install Unidoc
                uses: tayloraswift/swift-unidoc-action@master
                with:
                    unidoc-version: "master"

            #   This clobbers everything in the current directory!
            -   name: Checkout repository
                uses: actions/checkout@v3

            -   name: Run pipeline
                run: .github/pipeline

            -   name: Validate documentation
                run: |
                    unidoc compile -I .. \
                    --swift-toolchain $SWIFT_INSTALLATION \
                    --ci fail-on-errors \
                    --package-name swift-unixtime

    macos:
        runs-on: macos-14
        name: macOS
        env:
            DEVELOPER_DIR: "/Applications/Xcode_15.3.app/Contents/Developer"

        steps:
            -   name: Checkout repository
                uses: actions/checkout@v3

            -   name: Build iOS
                run: |
                    swift --version
                    xcrun xcodebuild build -scheme "UnixCalendar" -destination \
                        "generic/platform=ios"

            -   name: Build tvOS
                run: |
                    swift --version
                    xcrun xcodebuild build -scheme "UnixCalendar" -destination \
                        "generic/platform=tvos"

            -   name: Build watchOS
                run: |
                    swift --version
                    xcrun xcodebuild build -scheme "UnixCalendar" -destination \
                        "generic/platform=watchos"

            -   name: Run pipeline
                run: .github/pipeline
