name: build

on:
    push:
        branches: [ master ]
    pull_request:
        branches: [ master ]

jobs:
    server:
        runs-on: ubuntu-24.04
        name: Amazon Linux 2023

        strategy:
            matrix:
                image:
                -   tayloraswift/5.10.0-amazonlinux2023:latest
        steps:
            -   name: Checkout repository
                uses: actions/checkout@v3

            -   name: Run pipeline
                run: |
                    docker run -t --rm \
                        --name swift-environment \
                        --user root \
                        -v $PWD:/swift-hash \
                        -w /swift-hash \
                        ${{ matrix.image }} \
                        .github/pipeline

    linux:
        runs-on: ubuntu-24.04
        name: Ubuntu 24.04

        env:
            SWIFT_PREFIX: "swift-5.10.1-release/ubuntu2404/swift-5.10.1-RELEASE"
            SWIFT_ID: "swift-5.10.1-RELEASE-ubuntu24.04"

        steps:
            -   name: Cache Swift toolchain
                uses: actions/cache@v2
                with:
                    path: ${{ env.SWIFT_ID }}.tar.gz
                    key: ${{ env.SWIFT_ID }}

            -   name: Cache status
                id:   cache_status
                uses: andstor/file-existence-action@v1
                with:
                    files: ${{ env.SWIFT_ID }}.tar.gz

            -   name: Download Swift
                if: steps.cache_status.outputs.files_exists == 'false'
                run: |
                    curl https://download.swift.org/$SWIFT_PREFIX/$SWIFT_ID.tar.gz \
                        --output $SWIFT_ID.tar.gz

            -   name: Set up Swift
                run: |
                    mkdir -p $HOME/$SWIFT_ID
                    tar -xzf $SWIFT_ID.tar.gz -C $HOME/$SWIFT_ID --strip 1
                    echo "$HOME/$SWIFT_ID/usr/bin" >> $GITHUB_PATH
                    cat $GITHUB_PATH

            #   This clobbers everything in the current directory, which is why we installed
            #   the Swift toolchain in the home directory.
            -   name: Checkout repository
                uses: actions/checkout@v3

            -   name: Run pipeline
                run: .github/pipeline

            -   name: Install Unidoc
                uses: tayloraswift/swift-unidoc-action@master
                with:
                    unidoc-version: "master"

            -   name: Validate documentation
                run: unidoc compile -I .. \
                    --swift-toolchain $HOME/$SWIFT_ID/usr/ \
                    --ci fail-on-errors \
                    --package-name swift-unixtime

    macos:
        runs-on: macos-14
        name: macOS
        env:
            DEVELOPER_DIR: "/Applications/Xcode_15.3.app/Contents/Developer"

        steps:
            -   name: Checkout repository
                uses: actions/checkout@v3

            -   name: Build iOS
                run: |
                    swift --version
                    xcrun xcodebuild build -scheme "UnixCalendar" -destination \
                        "generic/platform=ios"

            -   name: Build tvOS
                run: |
                    swift --version
                    xcrun xcodebuild build -scheme "UnixCalendar" -destination \
                        "generic/platform=tvos"

            -   name: Build watchOS
                run: |
                    swift --version
                    xcrun xcodebuild build -scheme "UnixCalendar" -destination \
                        "generic/platform=watchos"

            -   name: Run pipeline
                run: .github/pipeline
